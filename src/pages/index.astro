---
const reqUrl = Astro.request.url;
const url = new URL(reqUrl);
const query = url.searchParams.get("q")?.trim();

import guyStanding from "../images/guy-standing.svg";

import { SearchResult } from "@lyrasearch/lyra";

import { create, insertBatch, search } from "@lyrasearch/lyra";
import jokesJSON from "../../jokes.json";

let jokes: SearchResult<{ _id: "string"; joke: "string" }>;
let searchTime = 0;

if (query) {
  const startTime = Date.now();
  const jokesDb = create({
    schema: {
      _id: "string",
      joke: "string",
    },
  });
  await insertBatch(jokesDb, jokesJSON, {
    batchSize: 649,
    language: "english",
  });

  jokes = search(jokesDb, {
    term: query,
    properties: ["joke"],
    tolerance: 1,
  });

  const endTime = Date.now();
  searchTime = endTime - startTime;
}

const emojis = [
  "😄",
  "😃",
  "😀",
  "😊",
  "😉",
  "😍",
  "😘",
  "😚",
  "😗",
  "😙",
  "😜",
  "😝",
  "😛",
  "😳",
  "😁",
  "😌",
  "😒",
];

const randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];

const regex = /("\ )|(\? )|(\. )+|(! )/gm;

const suggestions = ["human", "girl", "dad", "ice", "cat", "old", "job", "son"];

import Layout from "../layouts/Layout.astro";
---

<Layout
  title={jokes
    ? `Search result for ${query} on Dad jokes`
    : "Search for Dad jokes and get server rendered result"}
>
  <form action="/" class="w-full max-w-lg my-4">
    <label for="search" class="block text-center text-2xl font-medium my-4">
      Search for <em>Dad jokes</em>
      {randomEmoji}
    </label>
    <div class="mt-1">
      <input
        type="search"
        name="q"
        id="search"
        value={query}
        class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 disabled:cursor-not-allowed disabled:border-gray-200 disabled:bg-gray-50 disabled:text-gray-500"
        placeholder="people"
      />
    </div>
  </form>

  <div class="mb-4">
    Try these {
      suggestions.map((query, idx) => (
        <a class="text-indigo-600" href={`/?q=${query}`}>
          {`${query}${idx !== suggestions.length - 1 ? "," : ""}`}
        </a>
      ))
    }
  </div>
  {
    jokes?.hits?.length == 0 ? (
      <div class="mt-4">
        <h1 class="text-4xl font-bold tracking-tight text-gray-900 sm:text-5xl">
          No jokes found :(
        </h1>
        <p class="mt-2 text-base text-gray-500">
          Please try again with something else!
        </p>
      </div>
    ) : (
      <ul role="list" class="text-lg divide-y divide-gray-200 max-w-lg">
        {jokes?.hits.map(({ joke }) => {
          const regexHl = new RegExp(query, "gi");
          let text = joke.replaceAll(regexHl, "<em>$&</em>");
          text = text.replaceAll(regex, "$&\n");
          return <li class="py-4 whitespace-pre-line" set:html={text} />;
        })}
      </ul>
    )
  }
  {
    query ? (
      <footer class="my-4 text-slate-600">
        Took <time class="text-indigo-600">{searchTime}ms</time>, Found
        <code class="text-indigo-600">{jokes.count}</code> jokes
      </footer>
    ) : (
      <img
        src={guyStanding}
        class="mt-8 mb-8"
        width="300"
        height="604"
        alt="A guy pretending to be dad with lots of humor"
      />
    )
  }
  <p class="pt-2 mt-2 mb-4 text-gray-600 border-t-gray-200 border-t-2">
    Source code only available at <a
      class="text-indigo-600"
      href="https://github.com/ShivamJoker/Dad-jokes-SSR">GitHub</a
    >
  </p>
</Layout>

<style is:global>
  li em {
    color: black;
    font-weight: bold;
    font-style: normal;
  }
</style>
